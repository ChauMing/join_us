{"version":3,"sources":["orientHandler.js"],"names":["first","orienter","handler","o","Orienter","latitude","longitude","obj","lat","lon","start","Y","X","diffY","diffX","moving","init","pos","orienterStartRotateX","parseFloat","anime","getValue","stage","orienterStartRotateY","parseInt","sliceWrap","stopOrienter","rotateX","rotateY","$sliceWrap","css","transform","sliceWrapTranslateZ","$stage","$","html"],"mappings":";;AAAI,IAAIA,QAAQ,IAAZ;AACJ,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACvB,QAAKC,IAAI,IAAIC,QAAJ,EAAT;AACA,QAAIC,WAAW,CAAf;AACA,QAAIC,YAAY,CAAhB;AACAH,MAAED,OAAF,GAAY,UAACK,GAAD,EAAS;AACjB,YAAGP,KAAH,EAAU;AACNK,uBAAWE,IAAIC,GAAf,CADM,CACc;AACpBF,wBAAYC,IAAIE,GAAhB,CAFM,CAEc;AACpBT,oBAAQ,KAAR;AACAE,oBAAQQ,KAAR,CAAc;AACVC,mBAAGN,QADO;AAEVO,mBAAGN;AAFO,aAAd;AAIA;AACH;;AAED,YAAIO,QAAQN,IAAIC,GAAJ,GAAUH,QAAtB;AACA,YAAIS,QAAQP,IAAIE,GAAJ,GAAUH,SAAtB;AACAJ,gBAAQa,MAAR,CAAe;AACXD,wBADW;AAEXD;AAFW,SAAf;AAIH,KAlBD;AAmBAV,MAAEa,IAAF;AACH;;AAED;AACA;;AAEAf,SAAS;AACLS,WAAO,eAACO,GAAD,EAAS;AACZC,+BAAuBC,WAAWC,MAAMC,QAAN,CAAeC,KAAf,EAAsB,SAAtB,CAAX,CAAvB;AACAC,+BAAuBC,SAASJ,MAAMC,QAAN,CAAeI,SAAf,EAA0B,SAA1B,CAAT,CAAvB;AACH,KAJI;AAKLV,YAAQ,gBAACE,GAAD,EAAS;;AAEb,YAAGS,iBAAiB,IAApB,EAA0B;AACtB1B,oBAAQ,IAAR;AACA;AACH;AACD,YAAI2B,UAAUT,uBAAwBD,IAAIJ,KAAJ,GAAU,CAAhD;AACA,YAAIe,UAAUL,uBAAuBN,IAAIH,KAAzC;;AAEAe,mBAAWC,GAAX,CAAe;AACXC,uCAAyBC,mBAAzB,oBAA2DJ,OAA3D;AADW,SAAf;;AAKA,YAAGD,UAAU,EAAb,EAAiB;AACbA,sBAAU,EAAV;AACH,SAFD,MAEO,IAAGA,UAAU,CAAC,EAAd,EAAkB;AACrBA,sBAAU,CAAC,EAAX;AACH;;AAEDM,eAAOH,GAAP,CAAW;AACPC,oCAAsBJ,OAAtB,wBAAgDP,MAAMC,QAAN,CAAeC,KAAf,EAAsB,YAAtB,CAAhD;AADO,SAAX;;AAKAY,UAAE,OAAF,EAAWC,IAAX,YAAyBlB,IAAIH,KAA7B,kBAA+CG,IAAIJ,KAAnD;AAEH;AAhCI,CAAT","file":"orientHandler.js","sourcesContent":["    let first = true;\nfunction orienter(handler) {\n    let  o = new Orienter();\n    let latitude = 0;\n    let longitude = 0;\n    o.handler = (obj) => {\n        if(first) {\n            latitude = obj.lat; // 维度\n            longitude = obj.lon;// 经度\n            first = false;\n            handler.start({\n                Y: latitude,\n                X: longitude\n            });\n            return;\n        }\n\n        let diffY = obj.lat - latitude;\n        let diffX = obj.lon - longitude;\n        handler.moving({\n            diffX,\n            diffY\n        });\n    }\n    o.init();\n}\n\n// let orienterStartRotateX = 0;\n// let orienterStartRotateY = 0;\n\norienter({\n    start: (pos) => {\n        orienterStartRotateX = parseFloat(anime.getValue(stage, 'rotateX'));\n        orienterStartRotateY = parseInt(anime.getValue(sliceWrap, 'rotateY'))\n    }, \n    moving: (pos) => {\n\n        if(stopOrienter === true) {\n            first = true;    \n            return;\n        }\n        let rotateX = orienterStartRotateX + (pos.diffY/2);\n        let rotateY = orienterStartRotateY - pos.diffX;\n\n        $sliceWrap.css({ \n            transform: `translateZ(${sliceWrapTranslateZ}px) rotateY(${rotateY}deg)`,\n        })\n\n\n        if(rotateX > 40) {\n            rotateX = 40;\n        } else if(rotateX < -40) {\n            rotateX = -40;\n        }\n\n        $stage.css({\n            transform: `rotateX(${rotateX}deg) translateZ(${anime.getValue(stage, 'translateZ')})`,\n        })\n\n\n        $('#test').html(`diffX=${pos.diffX}<br>diffY=${pos.diffY}`);\n\n    }\n});\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":"/source/"}