{"version":3,"sources":["touchEventHandler.js"],"names":["orienterStartRotateX","orienterStartRotateY","throttle","method","delay","duration","timer","begin","Date","context","args","arguments","current","clearTimeout","apply","setTimeout","bodyMoving","handler","$body","$","startX","startY","p","on","e","touch","touches","clientX","clientY","start","preventDefault","pdiffX","Math","abs","diffX","diffY","moving","end","moveToInitZ","requestAnimationFrame","currentZ","parseInt","anime","getValue","stage","a","initStageTranslateZ","$stage","css","transform","bodyOnTouchHandler","stopOrienter","startRotateY","parseFloat","sliceWrap","startRotateX","rotateY","imageNumber","imageWidth","rotateX","allowRotateX","$sliceWrap","sliceWrapTranslateZ","X","z","tz","window"],"mappings":"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","file":"touchEventHandler.js","sourcesContent":["let orienterStartRotateX = 0;\nlet orienterStartRotateY = 0;\n\n\n\nfunction throttle(method, delay, duration) {\n    let timer = null;\n    let begin = new Date();\n    return function() {\n        var context = this,\n            args = arguments,\n            current = new Date();\n\n        clearTimeout(timer);\n\n\n        if(current - begin >= duration) {\n            method.apply(context, args);\n            begin = current;\n        } else {\n            timer = setTimeout(() => {\n                method.apply(context, args);\n            }, delay);\n        }\n    }\n\n}\n\nfunction bodyMoving(handler) {\n    let $body = $('body');\n\n    let startX = 0;\n    let startY = 0;\n\n\n    let p = 0;\n\n    $body.on('touchstart', (e) => {\n        let touch = e.touches[0];\n\n        startX = touch.clientX;\n        startY = touch.clientY;\n\n        touch.startX = startX;\n        touch.startY = startY;\n        p = touch.clientX;\n\n        handler.start && handler.start(touch);\n\n    });\n\n    $body.on('touchmove', (e) => {\n        e.preventDefault();\n\n        let touch = e.touches[0];\n\n        touch.pdiffX = Math.abs(touch.clientX - p);\n        p = touch.clientX;\n\n        // console.log(touch.pdiffX);\n        touch.diffX = touch.clientX - startX;\n        touch.diffY = touch.clientY - startY;\n\n        handler.moving && handler.moving(touch);\n\n    });\n    $body.on('touchend', (e) => {\n        let touch = e.touches[0];\n        handler.end && handler.end(touch)\n    });\n}\n\n\n\n(function moveToInitZ() {\n    \n    requestAnimationFrame(moveToInitZ);\n    let currentZ = parseInt(anime.getValue(stage, 'translateZ'));\n\n    let a = (currentZ + initStageTranslateZ) / 2;\n    $stage.css({\n        transform: `translateZ(${a}px)`\n    })\n})()\n\nconst bodyOnTouchHandler = {};\n\nbodyOnTouchHandler.start = function(touch) {\n    stopOrienter = true;\n    this.startRotateY = parseFloat(anime.getValue(sliceWrap, 'rotateY'));\n    this.startRotateX = parseFloat(anime.getValue(sliceWrap, 'rotateX'));\n}\n\nbodyOnTouchHandler.moving = function(touch) {\n\n    let rotateY = this.startRotateY - (touch.diffX / (imageNumber * imageWidth) * 360 * 1.5);\n    let rotateX = this.startRotateX + (touch.diffY / (imageNumber * imageWidth) * 360 * 1.5);\n\n    if(rotateX > allowRotateX) {\n        rotateX = allowRotateX;\n    } else if(rotateX < -allowRotateX) {\n        rotateX = -allowRotateX;\n    }\n\n\n    $sliceWrap.css({\n        transform: `translateZ(${sliceWrapTranslateZ}px) \n                    rotateX(${rotateX}deg) \n                    rotateY(${rotateY}deg)`,\n    });\n\n    throttle((X) => {\n\n        requestAnimationFrame(() => {\n            let z = parseFloat(anime.getValue(stage, 'translateZ'));\n\n\n\n            let tz = z - X * 30;\n            let a = (z + tz ) / 2;\n            $stage.css({\n                transform: `translateZ(${a}px)`\n            })\n        })\n\n    }, 0, 100)(touch.pdiffX);\n\n    \n\n};\n\n\nbodyOnTouchHandler.end = function() {\n    window.orienterStartRotateX = parseFloat(anime.getValue(sliceWrap, 'rotateX'));\n    window.orienterStartRotateY = parseFloat(anime.getValue(sliceWrap, 'rotateY'));\n    stopOrienter = false;\n}\n\n\nbodyMoving(bodyOnTouchHandler);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":"/source/"}